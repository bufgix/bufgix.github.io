{"version":3,"sources":["Assets/Img/loader.svg","config.js","Utils/apollo.js","Components/Header/HeaderContainer.js","Components/Header/HeaderWrapper.js","Components/Header/HeaderTitle.js","Components/Header/HeaderSubtitle.js","Components/Header/Header.js","Components/Common/Loader.js","Components/Blog/BlogContainer.js","Components/Blog/Card/CardContainer.js","Components/Blog/Card/CardHeader.js","Components/Blog/Card/CardCategory.js","Components/Blog/Card/CardTitle.js","Components/Blog/Card/CardDescription.js","Components/Blog/Card/CardReadingTime.js","Components/Blog/Card/Card.js","Containers/Blog.js","Components/Post/ReactionCard/ReactionCardContainer.js","Components/Post/ReactionCard/ReactionCardText.js","Components/Post/ReactionCard/ReactionCardBorder.js","Components/Post/ReactionCard/ReactionCardLink.js","Components/Post/ReactionCard/ReactionCard.js","Components/Post/PostContainer.js","Components/Post/PostTitle.js","Components/Post/PostDate.js","Components/Post/PostDateLink.js","Components/Post/PostReaction.js","Components/Post/Author/AuthorDetails.js","Components/Post/Author/AuthorAvatar.js","Components/Post/Author/AuthorName.js","Containers/BlogPost.js","Router.js","Application.js","serviceWorker.js","index.js"],"names":["module","exports","config","githubConvertedToken","githubUserName","githubRepo","title","subtitle","header","backgroundColor","titleColor","subtitleColor","client","ApolloClient","uri","request","operation","setContext","headers","authorization","atob","HeaderContainer","styled","div","HeaderWrapper","HeaderTitle","h1","HeaderSubtitle","Header","LoaderContainer","span","Loader","src","loader","alt","BlogContainer","CardContainer","CardHeader","StyledCategory","CardCategory","value","key","id","style","color","name","CardTitle","h2","CardDescription","p","ReadingTime","CardReadingTime","time","Card","blog","useState","labels","setLabels","history","useHistory","useEffect","nodes","filter","map","i","readingTime","body","minutes","onClick","number","push","bodyText","GET_POSTS","gql","Blog","posts","setPosts","useQuery","loading","error","data","console","repository","issues","v","ReactionCardContainer","ReactionCardText","ReactionCardBorder","ReactionCardLink","a","ReactionCard","link","href","target","rel","role","aria-label","PostContainer","PostTitle","PostDate","PostDateLink","PostReaction","AuthorDetails","AuthorAvatar","img","AuthorName","BlogHome","issueNumber","parseInt","window","location","split","pop","post","setPost","addReaction","setAddReaction","reactionCounter","setReactionCounter","getEmojiStringByName","useCallback","emojiName","setReactionFun","reactions","reactions_array","forEach","element","obj","by","user","login","emoji","content","issue","author","avatarUrl","moment","updatedAt","format","url","options","overrides","component","children","props","className","jsx","pre","language","docco","counters","onSelect","log","githubCounterEmojiSelect","onAdd","createBrowserHistory","require","Router","exact","path","Application","Helmet","charSet","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.55e3bd3d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.47601b16.svg\";","export const config = {\r\n  // Your Github Converted Token To Know How To Get Your Token Look at Readme.md\r\n  githubConvertedToken: \"ZmFiOGU1NzJjMjM4OTdjZDA4OWRlNmRiZTM0NDI2Yjc4OWQ0ZjJlNA==\",\r\n\r\n  // Your Github UserName\r\n  githubUserName: \"bufgix\",\r\n\r\n  // Your Github Repo Name Where You Have your issues as Blog\r\n  githubRepo: \"bufgix.github.io\",\r\n\r\n  // Your Personal Blog Title\r\n  title : \"Faruk Oruç\" ,\r\n\r\n  // Your Personal Blog Subtitle\r\n  subtitle : \"Full Stack Developer Blog\",\r\n\r\n  // Header customization\r\n  header: {\r\n    backgroundColor: '#f1f6f8', // can be a CSS gradient\r\n    titleColor: '#ff5252',\r\n    subtitleColor: '#37474f',\r\n  },\r\n};\r\n","import ApolloClient from \"apollo-boost\";\r\n\r\nimport { config } from '../config'\r\n\r\nexport const client = new ApolloClient({\r\n  uri: \"https://api.github.com/graphql\",\r\n  request: operation => {\r\n    operation.setContext({\r\n      headers: {\r\n        authorization: `Bearer ${atob(config.githubConvertedToken)}`\r\n      }\r\n    });\r\n  }\r\n});","import styled from 'styled-components'\r\n\r\nimport { config } from '../../config'\r\nconst { backgroundColor } = config.header\r\n\r\nexport const HeaderContainer = styled.div`\r\n  padding: 5em;\r\n  text-align: center;\r\n  background: ${backgroundColor};\r\n  background-repeat: no-repeat;\r\n  background-position: center center;\r\n  background-size: cover;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    padding: 3em;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const HeaderWrapper = styled.div`\r\n  margin: 0 auto;\r\n  padding: 0 1em;\r\n  max-width: 1140px;\r\n  text-align: center;\r\n`","import styled from 'styled-components'\r\n\r\nimport { config } from '../../config'\r\nconst { titleColor } = config.header\r\n\r\nexport const HeaderTitle = styled.h1`\r\n  font-weight: 700;\r\n  line-height: 1.15;\r\n  margin: 1.25rem 0;\r\n  font-size: 4.5em;\r\n  text-align: center;\r\n  color: ${titleColor};\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 3em;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nimport { config } from '../../config'\r\nconst { subtitleColor } = config.header\r\n\r\nexport const HeaderSubtitle = styled.h1`\r\n  font-weight: 400;\r\n  color: ${subtitleColor};\r\n  line-height: 1.15;\r\n  margin: 1.25rem 0;\r\n  font-size: 2.5em;\r\n  text-align: center;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 2em;\r\n  }\r\n`","import React from 'react'\r\n\r\nimport {\r\n    HeaderContainer,\r\n    HeaderWrapper,\r\n    HeaderTitle,\r\n    HeaderSubtitle\r\n} from './'\r\nimport { config } from \"../../config\"\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <HeaderContainer>\r\n            <HeaderWrapper>\r\n                <HeaderTitle>{config.title}</HeaderTitle>\r\n                <HeaderSubtitle>{config.subtitle}</HeaderSubtitle>\r\n            </HeaderWrapper>\r\n        </HeaderContainer>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport loader from '../../Assets/Img/loader.svg'\r\n\r\nconst LoaderContainer = styled.span`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  img {\r\n    height: 128px;\r\n  }\r\n`\r\n\r\nexport const Loader = () => (\r\n  <LoaderContainer>\r\n    <img src={loader} alt=\"Loading...\" />\r\n  </LoaderContainer>\r\n)","import styled from 'styled-components'\r\n\r\nexport const BlogContainer = styled.div`\r\n  margin: 2rem auto 0;\r\n  width: 90%;\r\n  max-width: 700px;\r\n  padding: 20px 10px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const CardContainer = styled.div`\r\n  cursor: pointer;\r\n  margin-bottom: 6rem;\r\n`","import styled from 'styled-components'\r\n\r\nexport const CardHeader = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCategory = styled.div`\r\n  display: inline-block;\r\n  background: #009bbb;\r\n  border-radius: 3px;\r\n  padding: 3px 15px;\r\n  font-size: 12px;\r\n  text-transform: uppercase;\r\n  color: #fff;\r\n  font-weight: 300;\r\n  line-height: 28px;\r\n  font-family: \"Quicksand\";\r\n  margin-right: 10px;\r\n`\r\n\r\nexport const CardCategory = ({ value }) => (\r\n  <StyledCategory\r\n    key={value.id}\r\n    style={{ backgroundColor: `#${value.color}` }}>\r\n    {value.name}\r\n  </StyledCategory>\r\n)","import styled from 'styled-components'\r\n\r\nexport const CardTitle = styled.h2`\r\n  font-size: 34px;\r\n  transition-duration: 0.15s, 0.15s, 0.15s;\r\n  transition-timing-function: ease-in, ease-in, ease-in;\r\n  transition-delay: 0s, 0s, 0s;\r\n\r\n  :hover {\r\n    opacity: 0.7;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const CardDescription = styled.p`\r\n  font-size: 18px;\r\n  overflow: hidden;\r\n  display: -webkit-box;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n`","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst ReadingTime = styled.p`\r\n  color: #b5b5b5;\r\n  font-size: 15px\r\n`\r\n\r\nexport const CardReadingTime = ({ time }) => (\r\n  <ReadingTime>{time} Min Read</ReadingTime>\r\n)","import React, { useState, useEffect } from \"react\";\r\nimport readingTime from \"reading-time\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport {\r\n  CardContainer,\r\n  CardHeader,\r\n  CardCategory,\r\n  CardReadingTime,\r\n  CardTitle,\r\n  CardDescription,\r\n} from './'\r\n\r\nexport const Card = ({ blog }) => {\r\n  const [labels, setLabels] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const openBlog = (title, number) => {\r\n    history.push(`/blog/${title}/${number}`);\r\n  }\r\n\r\n  useEffect(() => {\r\n    const labels = blog.labels.nodes.filter((value) => {\r\n      return value.name !== \"blog\";\r\n    });\r\n\r\n    setLabels(labels);\r\n  }, [blog.labels.nodes]);\r\n\r\n  return (\r\n    <CardContainer>\r\n      <CardHeader>\r\n        <>\r\n        {labels.map((value, i) => {\r\n          return (\r\n            <CardCategory value={value} key={i} />\r\n          );\r\n        })}\r\n        </>\r\n        <CardReadingTime time={readingTime(blog.body).minutes} />\r\n      </CardHeader>\r\n      <div>\r\n        <CardTitle onClick={() => openBlog(blog.title, blog.number)}>{blog.title}</CardTitle>\r\n        <CardDescription>\r\n          {blog.bodyText}\r\n        </CardDescription>\r\n      </div>\r\n    </CardContainer>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport { config } from \"../config\";\r\nimport { Header } from \"../Components/Header\";\r\nimport { Loader } from '../Components/Common'\r\nimport { BlogContainer } from '../Components/Blog'\r\nimport { Card } from '../Components/Blog/Card'\r\n\r\nconst GET_POSTS = gql`\r\n{\r\n  repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\r\n    issues(first: 100, states: OPEN, filterBy: { labels: \"blog\" }) {\r\n      nodes {\r\n        title\r\n        body\r\n        bodyHTML\r\n        bodyText\r\n        number\r\n        labels(first: 100) {\r\n          nodes {\r\n            color\r\n            name\r\n            id\r\n          }\r\n        }\r\n        author {\r\n          url\r\n          avatarUrl\r\n          login\r\n        }\r\n        updatedAt\r\n        id\r\n      }\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nconst Blog = () => {\r\n  const [posts, setPosts] = useState([]);\r\n  const { loading, error, data } = useQuery(GET_POSTS);\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (error) {\r\n        console.error(error)\r\n      }\r\n\r\n      if (data) {\r\n        setPosts(data?.repository?.issues?.nodes)\r\n      }\r\n    }\r\n  }, [loading, error, data]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <BlogContainer>\r\n        {\r\n          loading\r\n          ? <Loader />\r\n          : posts.map((v, i) => {\r\n              return <Card blog={v} key={i} />;\r\n            })\r\n        }\r\n      </BlogContainer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Blog;\r\n","import styled from 'styled-components'\r\n\r\nexport const ReactionCardContainer = styled.div`\r\n  padding-top: 5px;\r\n  background-color: rgb(255, 255, 255);\r\n  border: 1px solid rgba(0, 0, 0, 0.15);\r\n  border-radius: 4px;\r\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 3px 12px;\r\n  display: inline-block;\r\n`","import styled from 'styled-components'\r\n\r\nexport const ReactionCardText = styled.p`\r\n  font-size: 14px;\r\n  line-height: 1.5;\r\n  color: rgb(118, 118, 118);\r\n  margin: 6px 12px;\r\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica;\r\n`","import styled from 'styled-components'\r\n\r\nexport const ReactionCardBorder = styled.div`\r\n  height: 1px;\r\n  margin: 8px 1px 0px;\r\n  background-color: rgb(229, 229, 229);\r\n`","import styled from 'styled-components'\r\n\r\nexport const ReactionCardLink = styled.a`\r\n  display: block;\r\n  text-align: center;\r\n  margin: 0;\r\n  padding: 5px;\r\n  line-height: 1.5;\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  transition-duration: 0.15s, 0.15s, 0.15s;\r\n  transition-timing-function: ease-in, ease-in, ease-in;\r\n  transition-delay: 0s, 0s, 0s;\r\n  color: rgba(0, 0, 0, 0.54);\r\n\r\n  :hover {\r\n    color: black;\r\n  }\r\n`","import React from \"react\";\r\n\r\nimport {\r\n  ReactionCardContainer,\r\n  ReactionCardText,\r\n  ReactionCardBorder,\r\n  ReactionCardLink,\r\n} from './'\r\n\r\nexport const ReactionCard = ({ link }) => {\r\n  return (\r\n    <ReactionCardContainer>\r\n      <ReactionCardText>Give your reaction on Github</ReactionCardText>\r\n      <ReactionCardBorder />\r\n      <ReactionCardLink href={link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        Github link <span role=\"img\" aria-label=\"lightning bolt\">⚡️</span>\r\n      </ReactionCardLink>\r\n    </ReactionCardContainer>\r\n  );\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const PostContainer = styled.div`\r\n  margin: 2rem auto 0;\r\n  width: 90%;\r\n  max-width: 700px;\r\n  padding: 20px 10px;\r\n  position: relative;\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostTitle = styled.h1`\r\n  @media only screen and (max-width: 768px) {\r\n    font-size: 30px;\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostDate = styled.p`\r\n  color: rgba(0, 0, 0, 0.54);\r\n  font-weight: 400;\r\n  font-size: 14px;\r\n  margin-bottom: 0px;\r\n  margin-top: 0px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostDateLink = styled.a`\r\n  font-size: 14px;\r\n  text-decoration: none;\r\n  transition-duration: 0.15s, 0.15s, 0.15s;\r\n  transition-timing-function: ease-in, ease-in, ease-in;\r\n  transition-delay: 0s, 0s, 0s;\r\n  color: rgba(0, 0, 0, 0.54);\r\n\r\n  :hover {\r\n    color: rgba(0, 0, 0, 0.84);\r\n  }\r\n`","import styled from 'styled-components'\r\n\r\nexport const PostReaction = styled.span`\r\n  position: absolute;\r\n  bottom: 60px;\r\n  animation-name: scale-in;\r\n  animation-duration: 0.15s;\r\n  animation-timing-function: cubic-bezier(0.2, 0, 0.13, 1.5);\r\n`","import styled from 'styled-components'\r\n\r\nexport const AuthorDetails = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`","import styled from 'styled-components'\r\n\r\nexport const AuthorAvatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 40px;\r\n  margin: 10px;\r\n  margin-left: 0px;\r\n`","import styled from 'styled-components'\r\n\r\nexport const AuthorName = styled.p`\r\n  margin-bottom: 0px;\r\n  margin-top: 0px;\r\n  font-size: 16px;\r\n  color: rgba(0, 0, 0, 0.84);\r\n`","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport moment from \"moment\";\r\nimport Markdown from \"markdown-to-jsx\";\r\nimport readingTime from \"reading-time\";\r\nimport SyntaxHighlighter from \"react-syntax-highlighter\";\r\nimport { docco } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\r\nimport { GithubCounter } from \"react-reactions\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { useQuery } from '@apollo/react-hooks';\r\n\r\nimport { config } from \"../config\";\r\nimport { ReactionCard } from \"../Components/Post/ReactionCard\";\r\nimport { Loader } from '../Components/Common'\r\nimport {\r\n  PostContainer,\r\n  PostTitle,\r\n  PostDate,\r\n  PostDateLink,\r\n  PostReaction,\r\n} from '../Components/Post'\r\nimport {\r\n  AuthorDetails,\r\n  AuthorAvatar,\r\n  AuthorName,\r\n} from '../Components/Post/Author'\r\n\r\nexport default function BlogHome() {\r\n  const issueNumber = parseInt(window.location.href.split(\"/\").pop());\r\n  const GET_POSTS = gql`\r\n  {\r\n    repository(owner: \"${config.githubUserName}\", name: \"${config.githubRepo}\") {\r\n      issue(number: ${issueNumber}) {\r\n        title\r\n        body\r\n        bodyHTML\r\n        url\r\n        bodyText\r\n        number\r\n        bodyHTML\r\n        author {\r\n          url\r\n          avatarUrl\r\n          login\r\n        }\r\n        reactions(first:100){\r\n          nodes{\r\n            content\r\n            user{\r\n              id\r\n              login\r\n            }\r\n          }\r\n        }\r\n        updatedAt\r\n        id\r\n      }\r\n    }\r\n  }\r\n  `\r\n  const [post, setPost] = useState([]);\r\n  const [addReaction, setAddReaction] = useState(false);\r\n  const [reactionCounter, setReactionCounter] = useState([]);\r\n  const { loading, error, data } = useQuery(GET_POSTS);\r\n\r\n  const getEmojiStringByName = useCallback((emojiName) => {\r\n    switch (emojiName) {\r\n      case \"THUMBS_UP\":\r\n        return \"👍\";\r\n\r\n      case \"THUMBS_DOWN\":\r\n        return \"👎\";\r\n\r\n      case \"LAUGH\":\r\n        return \"😄\";\r\n\r\n      case \"HOORAY\":\r\n        return \"🎉\";\r\n\r\n      case \"CONFUSED\":\r\n        return \"😕\";\r\n\r\n      case \"HEART\":\r\n        return \"❤️\";\r\n\r\n      case \"ROCKET\":\r\n        return \"🚀\";\r\n\r\n      case \"EYES\":\r\n        return \"👀\";\r\n\r\n      default:\r\n        return \"\";\r\n    }\r\n  }, []);\r\n\r\n  const setReactionFun = useCallback((reactions) => {\r\n    // {\r\n    //   emoji: \"👍\", // String emoji reaction\r\n    //   by: \"case\" // String of persons name\r\n    // }\r\n\r\n    let reactions_array = [];\r\n    reactions.forEach(element => {\r\n      let obj = {\r\n        by: element.user.login,\r\n        emoji: getEmojiStringByName(element.content)\r\n      };\r\n      reactions_array.push(obj);\r\n    });\r\n\r\n    setReactionCounter(reactions_array);\r\n  }, [getEmojiStringByName]);\r\n\r\n  const HyperLink = ({ children, ...props }) => (\r\n    <a href={props.href} target=\"_blank\" rel=\"noopener noreferrer\" className=\"blog-post-anchor\">\r\n      {children}\r\n      <style jsx=\"true\">\r\n        {`\r\n          a {\r\n            color: #484848;\r\n            font-weight: 400;\r\n          }\r\n        `}\r\n      </style>\r\n    </a>\r\n  );\r\n\r\n  const CodeBlock = ({ children }) => (\r\n    <SyntaxHighlighter language=\"javascript\" style={docco}>\r\n      {children.props.children}\r\n    </SyntaxHighlighter>\r\n  );\r\n\r\n  const githubCounterEmojiSelect = (emoji) => {\r\n    console.log(emoji);\r\n  }\r\n\r\n  const githubCounterAddReaction = () => {\r\n    setAddReaction(!addReaction);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!loading) {\r\n      if (error) {\r\n        console.error(error)\r\n      }\r\n\r\n      if (data) {\r\n        const issues = data.repository.issue\r\n        setPost(issues);\r\n        setReactionFun(issues.reactions.nodes);\r\n      }\r\n    }\r\n  }, [loading, error, data, setReactionFun]);\r\n\r\n  if (loading) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {post.title && (\r\n        <PostContainer>\r\n          <PostTitle>{post.title}</PostTitle>\r\n          <div>\r\n            <AuthorDetails>\r\n              <AuthorAvatar src={post.author.avatarUrl} alt={post.author.login} />\r\n              <div>\r\n                <AuthorName>{post.author.login}</AuthorName>\r\n                <PostDate>\r\n                  {moment(post.updatedAt).format(\"DD MMM YYYY\")} . \r\n                  {readingTime(post.body).minutes} Min Read . \r\n                  <PostDateLink href={post.url} target=\"_black\">View On Github</PostDateLink>\r\n                </PostDate>\r\n              </div>\r\n            </AuthorDetails>\r\n          </div>\r\n          <Markdown\r\n            options={{\r\n              overrides: {\r\n                a: {\r\n                  component: HyperLink\r\n                },\r\n                pre: {\r\n                  component: CodeBlock\r\n                }\r\n              }\r\n            }}\r\n          >\r\n            {post.body}\r\n          </Markdown>\r\n          {addReaction && (\r\n            <PostReaction>\r\n              {/* <GithubSelector onSelect={emoji => onEmojiSelect(emoji)} /> */}\r\n              <ReactionCard link={post.url}/>\r\n            </PostReaction>\r\n          )}\r\n          <GithubCounter counters={reactionCounter} onSelect={emoji => githubCounterEmojiSelect(emoji)} onAdd={() => githubCounterAddReaction()} />\r\n        </PostContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Blog from \"./Containers/Blog\"\r\nimport BlogHome from \"./Containers/BlogPost\";\r\n\r\nvar createBrowserHistory = require(\"history\").createBrowserHistory;\r\nconst history = createBrowserHistory();\r\n\r\nconst Router = () => {\r\n  return (\r\n    <HashRouter history={history}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Blog} />\r\n        <Route exact path=\"/blog/:title/:issueNumber\" component={BlogHome}/>\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from 'react'\r\nimport { ApolloProvider } from '@apollo/react-hooks';\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { config } from './config'\r\nimport { client } from './Utils/apollo';\r\nimport Router from './Router';\r\n\r\nconst Application = () => (\r\n  <>\r\n    <Helmet>\r\n        <title>{config.title}</title>\r\n        <meta charSet=\"utf-8\" />\r\n        <meta name=\"description\" content={config.subtitle} />\r\n        <meta name=\"theme-color\" content={config.header.backgroundColor} />\r\n    </Helmet>\r\n    <ApolloProvider client={client}>\r\n      <Router />\r\n    </ApolloProvider>\r\n  </>\r\n);\r\n\r\nexport default Application;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Application from './Application';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './index.css';\r\n\r\nReactDOM.render(<Application />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nif(process.env.NODE_ENV === 'production') serviceWorker.register();\r\nelse serviceWorker.unregister();\r\n\r\n"],"sourceRoot":""}